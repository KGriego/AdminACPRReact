{"version":3,"sources":["Components/NavBar.js","Components/rowButton.js","Components/TableRows.js","Pages/ListOfTables/ListOfTables.js","App.js","serviceWorker.js","index.js"],"names":["withStyles","theme","root","width","grow","flexGrow","menuButton","marginLeft","marginRight","title","Object","defineProperty","display","breakpoints","up","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","&:hover","spacing","unit","searchIcon","height","pointerEvents","alignItems","justifyContent","inputRoot","color","inputInput","paddingTop","paddingRight","paddingBottom","paddingLeft","transition","transitions","create","&:focus","props","classes","react_default","a","createElement","className","AppBar_default","Toolbar_default","IconButton_default","aria-label","Menu_default","Typography_default","variant","noWrap","Search_default","InputBase_default","placeholder","input","RowButton","state","anchorEl","handleClose","_this","setState","handleClick","e","currentTarget","updateDatabase","rowId","target","value","text","textContent","axios","post","then","res","console","log","catch","err","this","id","TableCell_default","Button_default","aria-owns","undefined","aria-haspopup","onClick","core_Menu_default","open","Boolean","onClose","MenuItem_default","Component","TableRows","results","getFromDatabase","get","concat","data","map","item","TableRow_default","key","numeric","component","scope","DataAdded","OwnerName","OwnerNumber","DeviceName","Issue","RepairStatus","rowButton","styles","marginTop","overflowX","table","minWidth","ListOfTables","_this$state$classes","Grid_default","container","direction","justify","xs","Paper_default","Table_default","TableHead_default","TableBody_default","Components_TableRows","App","BrowserRouter","Components_NavBar","Switch","Route","exact","path","window","location","hostname","match","createMuiTheme","typography","useNextVariants","ReactDOM","render","core_styles","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.14c34d51.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport { fade } from \"@material-ui/core/styles/colorManipulator\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport SearchIcon from \"@material-ui/icons/Search\";\n\nconst styles = theme => ({\n  root: {\n    width: \"100%\"\n  },\n  grow: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20\n  },\n  title: {\n    display: \"none\",\n    [theme.breakpoints.up(\"sm\")]: {\n      display: \"block\"\n    }\n  },\n  search: {\n    position: \"relative\",\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    \"&:hover\": {\n      backgroundColor: fade(theme.palette.common.white, 0.25)\n    },\n    marginLeft: 0,\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      marginLeft: theme.spacing.unit,\n      width: \"auto\"\n    }\n  },\n  searchIcon: {\n    width: theme.spacing.unit * 9,\n    height: \"100%\",\n    position: \"absolute\",\n    pointerEvents: \"none\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  inputRoot: {\n    color: \"inherit\",\n    width: \"100%\"\n  },\n  inputInput: {\n    paddingTop: theme.spacing.unit,\n    paddingRight: theme.spacing.unit,\n    paddingBottom: theme.spacing.unit,\n    paddingLeft: theme.spacing.unit * 10,\n    transition: theme.transitions.create(\"width\"),\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      width: 120,\n      \"&:focus\": {\n        width: 200\n      }\n    }\n  }\n});\n\nfunction NavBar(props) {\n  const { classes } = props;\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"Open drawer\"\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography\n            className={classes.title}\n            variant=\"h6\"\n            color=\"inherit\"\n            noWrap\n          >\n            Admin Cell Phone List\n          </Typography>\n          <div className={classes.grow} />\n          <div className={classes.search}>\n            <div className={classes.searchIcon}>\n              <SearchIcon />\n            </div>\n            <InputBase\n              placeholder=\"Searchâ€¦\"\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput\n              }}\n            />\n          </div>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n\nNavBar.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(NavBar);\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport Button from \"@material-ui/core/Button\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport TableCell from \"@material-ui/core/TableCell\";\n\nclass RowButton extends Component {\n  state = {\n    anchorEl: null\n  };\n\n  handleClose = () => {\n    this.setState({ anchorEl: null });\n  };\n\n  handleClick = e => {\n    this.setState({ anchorEl: e.currentTarget });\n  };\n\n  updateDatabase = e => {\n    const rowId = e.target.value;\n    const text = e.target.textContent;\n    axios\n      .post(\"/api/updateDatabase\", { rowId, text })\n      .then(res => {\n        console.log(\"updating database\", res);\n      })\n      .catch(err => {\n        console.log(\"Error happened, printed below\");\n        return console.log(\"err\", err);\n      });\n  };\n\n  render() {\n    const { anchorEl } = this.state;\n    const { id } = this.props;\n    return (\n      <TableCell>\n        <Button\n          aria-owns={anchorEl ? \"simple-menu\" : undefined}\n          aria-haspopup=\"true\"\n          onClick={this.handleClick}\n        >\n          Update Status\n        </Button>\n        <Menu\n          id=\"simple-menu\"\n          anchorEl={anchorEl}\n          open={Boolean(anchorEl)}\n          onClose={this.handleClose}\n        >\n          <MenuItem\n            onClick={this.updateDatabase}\n            onClose={this.handleClose}\n            value={id}\n          >\n            Recieved\n          </MenuItem>\n          <MenuItem\n            onClick={this.updateDatabase}\n            onClose={this.handleClose}\n            value={id}\n          >\n            Repairing\n          </MenuItem>\n          <MenuItem\n            onClick={this.updateDatabase}\n            onClose={this.handleClose}\n            value={id}\n          >\n            Repaired\n          </MenuItem>\n        </Menu>\n      </TableCell>\n    );\n  }\n}\n\nexport default RowButton;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport RowButton from \"./rowButton\";\n\nclass TableRows extends Component {\n  state = {\n    results: []\n  };\n\n  componentDidMount() {\n    this.getFromDatabase();\n  }\n\n  getFromDatabase = () => {\n    return axios\n      .get(\"/api/getFromDatabase\")\n      .then(res => {\n        this.setState({ results: this.state.results.concat(res.data) });\n        console.log(this.state.results);\n      })\n      .catch(err => {\n        console.log(\"error happened, printed below\");\n        return console.log(\"err\", err);\n      });\n  };\n\n  render() {\n    const { results } = this.state;\n    return results.map(item => {\n      console.log(\"running map\");\n      return (\n        <TableRow key={item.id}>\n          <TableCell numeric component=\"th\" scope=\"row\">\n            {item.DataAdded}\n          </TableCell>\n          <TableCell>{item.OwnerName}</TableCell>\n          <TableCell>{item.OwnerNumber}</TableCell>\n          <TableCell>{item.DeviceName}</TableCell>\n          <TableCell>{item.Issue}</TableCell>\n          <TableCell>{item.RepairStatus}</TableCell>\n          <RowButton id={item.id} />\n        </TableRow>\n      );\n    });\n  }\n}\n\nexport default TableRows;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Tablerows from \"../../Components/TableRows\";\nimport Paper from \"@material-ui/core/Paper\";\n\nconst styles = theme => ({\n  root: {\n    width: \"100%\",\n    marginTop: theme.spacing.unit * 3,\n    overflowX: \"auto\"\n  },\n  table: {\n    minWidth: 800\n  }\n});\n\nclass ListOfTables extends Component {\n  state = {\n    classes: styles\n  };\n\n  render() {\n    const {\n      classes: { root, table }\n    } = this.state;\n    return (\n      <Grid\n        container\n        alignItems=\"center\"\n        spacing={0}\n        direction=\"column\"\n        justify=\"center\"\n      >\n        <Grid item xs={8}>\n          <Paper className={root}>\n            <Table className={table}>\n              <TableHead>\n                <TableRow>\n                  <TableCell numeric>Date Added</TableCell>\n                  <TableCell>Owner Name</TableCell>\n                  <TableCell>Owner Number</TableCell>\n                  <TableCell>Device Name</TableCell>\n                  <TableCell>Issue</TableCell>\n                  <TableCell>Repair Status</TableCell>\n                  <TableCell>Update Status</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                <Tablerows />\n              </TableBody>\n            </Table>\n          </Paper>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nListOfTables.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(ListOfTables);\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\n\nimport NavBar from \"./Components/NavBar\";\nimport ListOfTables from \"./Pages/ListOfTables/\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <NavBar />\n          <Switch>\n            <Route exact path=\"/\" component={ListOfTables} />\n          </Switch>\n          {/* <Footer /> */}\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { createMuiTheme, MuiThemeProvider } from \"@material-ui/core/styles\";\nconst theme = createMuiTheme({\n  typography: {\n    useNextVariants: true\n  }\n});\n\nReactDOM.render(\n  <MuiThemeProvider theme={theme}>\n    <App />\n  </MuiThemeProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}